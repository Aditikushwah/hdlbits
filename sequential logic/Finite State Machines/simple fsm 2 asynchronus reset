module top_module(
    input clk,
    input areset,    // Asynchronous reset to OFF
    input j,
    input k,
    output out); //  

    parameter OFF=1'b0, ON=1'b1;
    reg state, next_state;

    always @(*) begin
        case(state)
            OFF:if(j==1'b0)
                next_state<=OFF;
            else
                  next_state<=ON;
            ON:if(k==1'b0)
                next_state<=ON;
              else
                  next_state<=OFF;
             endcase   
        // State transition logic
    end

    always @(posedge clk, posedge areset) begin
        if(areset)
            state<=OFF;
        else
            state<=next_state;
        // State flip-flops with asynchronous reset
    end

            always@(*)
               begin
                   case(state)
                      OFF:out<=1'b0;
                      ON:out<=1'b1;
                   endcase
               end
                  
    // Output logic
    // assign out = (state == ...);

endmodule
